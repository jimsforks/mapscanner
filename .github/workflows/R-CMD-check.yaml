on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          #- {os: macOS-latest,   r: 'devel'} # takes forever to run
          - {os: macOS-latest,   r: '4.0'}
          - {os: windows-latest, r: 'devel'}
          - {os: windows-latest, r: '4.0'}
          - {os: windows-latest, r: '3.6'}
          - {os: ubuntu-18.04,   r: '4.0', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
          - {os: ubuntu-18.04,   r: '3.6', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: false
      RSPM: ${{ matrix.config.rspm }}

    if: "!(contains(github.event.head_commit.message, 'ci skip')||contains(github.event.head_commit.message, 'skip ci'))"
    steps:

      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

        #- name: Cache R packages
        #if: runner.os != 'Windows'
        #uses: actions/cache@v1
        #with:
        #  path: ${{ env.R_LIBS_USER }}
        #  key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
        #  restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev libxml2-dev libssl-dev pandoc pandoc-citeproc
          sudo apt-get install libudunits2-dev libgdal-dev
          sudo apt-get install libmagick++-dev libpoppler-cpp-dev

      - name: R dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
          install.packages("lwgeom") # not auto-installed with sf
        shell: Rscript {0}

        #- name: gitconfig
        #run: |
        #  sudo git config --global user.name ${{secrets.UNAME}}
        #  sudo git config --global user.email ${{secrets.EMAIL}}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

        #- name: covr
        #run: 
        #  Rscript -e "install.packages('covr')" -e "covr::codecov()"
